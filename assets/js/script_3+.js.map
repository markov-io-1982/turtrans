{"version":3,"sources":["script_3+.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","RRS","window","ReactResponsiveSelect","default","Component","React","Form","[object Object]","args","super","this","handleSubmit","bind","handleChange","newValue","formValue","name","text","altered","setState","state","console","log","createElement","options","disabled","prefix","selectedValue","onChange","onSubmit","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"AAAA,SAASA,gBAAgBC,EAAKC,EAAKC,GAA2J,OAA/ID,KAAOD,EAAMG,OAAOC,eAAeJ,EAAKC,EAAK,CAAEC,MAAOA,EAAOG,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAAgBP,EAAIC,GAAOC,EAAcF,EAAK,MAAMQ,IAAMC,OAAOC,sBAAsBC,SAC7OC,UAAEA,WAAcC,MAMtB,MAAMC,aAAaF,UAAWG,eAAeC,GAAOC,SAASD,GAAMjB,gBAAgBmB,KAAM,QACrF,IAAInB,gBAAgBmB,KAAM,eAC1BA,KAAKC,aAAaC,KAAKF,OAAOnB,gBAAgBmB,KAAM,eACpDA,KAAKG,aAAaD,KAAKF,OAEzBH,aAAaO,GACX,MAAMC,EAAY,CAChBR,CAACO,EAASE,MAAO,CACfC,KAAMH,EAASG,KACfvB,MAAOoB,EAASpB,MAChBwB,QAASJ,EAASI,UAKtBR,KAAKS,SACL,IAAKT,KAAKU,SAAUL,GACpB,IAAMM,QAAQC,IAAI,iBAAkBZ,KAAKU,QAK3Cb,eACEc,QAAQC,IAAI,iBAAkBZ,KAAKU,OAGrCb,SACE,OACEF,MAAMkB,cAAc,MAAO,KAC3BlB,MAAMkB,cAAc,OAAQ,KAC5BlB,MAAMkB,cAAcvB,IAAK,CACvBgB,KAAM,QACNQ,QAAS,CACT,CAAE9B,MAAO,OAAQuB,KAAM,OACvB,CAAEvB,MAAO,aAAcuB,KAAM,cAC7B,CAAEA,KAAM,MAAOQ,SAAU,OACzB,CAAE/B,MAAO,OAAQuB,KAAM,QACvB,CAAEvB,MAAO,QAASuB,KAAM,SACxB,CAAEvB,MAAO,SAAUuB,KAAM,UACzB,CAAEvB,MAAO,SAAUuB,KAAM,WAGzBS,OAAQ,UACRC,cAAe,OACfC,SAAUlB,KAAKG,aACfgB,SAAUnB,KAAKC,gBAKjBN,MAAMkB,cAAc,MAAO,KAAMO,KAAKC,UAAUrB,KAAKU,MAAO,KAAM,MAMxEY,SAASC,OACT5B,MAAMkB,cAAcjB,KAAM,MAC1B4B,SAASC,eAAe","file":"script_3+.js","sourcesContent":["function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}const RRS = window.ReactResponsiveSelect.default;\nconst { Component } = React;\n\n\n\n\n\nclass Form extends Component {constructor(...args) {super(...args);_defineProperty(this, \"state\",\n    {});_defineProperty(this, \"handleSubmit\",\n    this.handleSubmit.bind(this));_defineProperty(this, \"handleChange\",\n    this.handleChange.bind(this));}\n\n  handleChange(newValue) {\n    const formValue = {\n      [newValue.name]: {\n        text: newValue.text,\n        value: newValue.value,\n        altered: newValue.altered } };\n\n\n\n    // Merge new value over top of existing value\n    this.setState(\n    { ...this.state, ...formValue },\n    () => console.log('handleChange()', this.state));\n\n\n  }\n\n  handleSubmit() {\n    console.log('handleSubmit()', this.state);\n  }\n\n  render() {\n    return (\n      React.createElement(\"div\", null,\n      React.createElement(\"form\", null,\n      React.createElement(RRS, {\n        name: \"make1\",\n        options: [\n        { value: 'null', text: 'Any' },\n        { value: 'alfa-romeo', text: 'Alfa Romeo' },\n        { text: 'BMW', disabled: \"BMW\" },\n        { value: 'fiat', text: 'Fiat' },\n        { value: 'lexus', text: 'Lexus' },\n        { value: 'morgan', text: 'Morgan' },\n        { value: 'subaru', text: 'Subaru' }],\n\n        \n        prefix: \"Make1: \",\n        selectedValue: \"fiat\",\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit }),\n\n        ),\n\n\n      React.createElement(\"pre\", null, JSON.stringify(this.state, null, 2))));\n\n\n  }}\n\n\nReactDOM.render(\nReact.createElement(Form, null),\ndocument.getElementById('root'));"]}